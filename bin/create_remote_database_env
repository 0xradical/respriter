#!/usr/bin/env bash

SCRIPT_PATH="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"

web_app=`$SCRIPT_PATH/remote_alias web-app-$1`
eval `heroku config -s -a $web_app`

web_api=`$SCRIPT_PATH/remote_alias api-$1`
eval `heroku config -s -a $web_api`

parse_uri="$SCRIPT_PATH/parse_uri"

cat << EOF > $2
# Database Url
POSTGRES_URL=$DATABASE_URL

# Postgres Docker
POSTGRES_DB=`$parse_uri $DB_URI path`
DB_ENV=$1

# Config
API_SCHEMA=$DB_SCHEMA
API_ANONYMOUS_ROLE=$DB_ANON_ROLE

# Secrets
AUTHENTICATOR_USER=`$parse_uri $DB_URI user`
AUTHENTICATOR_PASSWORD=`$parse_uri $DB_URI password`
MARKETING_USER=$MARKETING_USER
MARKETING_PASSWORD=$MARKETING_PASSWORD
STITCHDATA_PASSWORD=$STITCHDATA_PASSWORD
JWT_SECRET=$JWT_SECRET

# Certificates
CERTIFICATE_AWS_REGION=$CERTIFICATE_AWS_REGION
CERTIFICATE_AWS_HOST=$CERTIFICATE_AWS_HOST
CERTIFICATE_AWS_BUCKET=$CERTIFICATE_AWS_BUCKET
CERTIFICATE_AWS_FOLDER=$CERTIFICATE_AWS_FOLDER
CERTIFICATE_AWS_ACCESS_KEY_ID=$CERTIFICATE_AWS_ACCESS_KEY_ID
CERTIFICATE_AWS_SECRET_ACCESS_KEY=$CERTIFICATE_AWS_SECRET_ACCESS_KEY
CERTIFICATE_AWS_IS_PUBLIC=$CERTIFICATE_AWS_IS_PUBLIC
CERTIFICATE_AWS_IS_HTTPS=$CERTIFICATE_AWS_IS_HTTPS

# Direct Upload
DIRECT_UPLOAD_AWS_REGION=$DIRECT_UPLOAD_AWS_REGION
DIRECT_UPLOAD_AWS_HOST=$DIRECT_UPLOAD_AWS_HOST
DIRECT_UPLOAD_AWS_BUCKET=$DIRECT_UPLOAD_AWS_BUCKET
DIRECT_UPLOAD_AWS_ROOT_FOLDER=$DIRECT_UPLOAD_AWS_ROOT_FOLDER
DIRECT_UPLOAD_AWS_ACCESS_KEY_ID=$DIRECT_UPLOAD_AWS_ACCESS_KEY_ID
DIRECT_UPLOAD_AWS_SECRET_ACCESS_KEY=$DIRECT_UPLOAD_AWS_SECRET_ACCESS_KEY
DIRECT_UPLOAD_AWS_IS_PUBLIC=$DIRECT_UPLOAD_AWS_IS_PUBLIC
DIRECT_UPLOAD_AWS_IS_HTTPS=$DIRECT_UPLOAD_AWS_IS_HTTPS
EOF

echo "Created env file $2 with envs from $1"
