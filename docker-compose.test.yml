version: "3"
services:
  base.test: &base
    image: $WEB_APP_IMAGE
    env_file:
      - envs/test/base.env
      - envs/local/developer.env
    volumes:
      - ./i18n:/app/config/locales
      - ./components:/app/app/assets/vue/components
      - ./web-app:/app
      - /app/volumes
      - $LOCAL_NODE_MODULES/app/node_modules
      - base_bundle:/home/developer/bundle:cached
      - base_node_modules:/home/developer/node_modules:cached
    extra_hosts:
      - both.provider.test:172.20.1.118
      - urls.provider.test:172.20.1.118
      - sitemaps.provider.test:172.20.1.118

  app.test:
    <<: *base
    environment:
      - LOGSPOUT=ignore
    ports:
      - 3000
    depends_on:
      - api.test
      - webpacker.test
      - ssr.test
      - database.test
      - search.test
      - thumbor.test
      - mail.test
      - video.test

  que.test:
    <<: *base
    command: bundle exec que
    depends_on:
      - database.test
      - mail.test

  ssr.test:
    <<: *base
    command: make hypernova
    environment:
      - LOGSPOUT=ignore
    ports:
      - 7777

  webpacker.test:
    <<: *base
    command: bin/webpack-dev-server
    environment:
      - LOGSPOUT=ignore
    ports:
      - 3035

  database.test:
    image: $DATABASE_IMAGE
    env_file:
      - envs/test/database.env
    environment:
      - LOGSPOUT=ignore
    ports:
      - 5432
    volumes:
      - .:/app:cached
      - /app/volumes
      - ./images/database/test_seed.sql:/docker-entrypoint-initdb.d/z_seed.sql

  api.test:
    image: postgrest/postgrest:v6.0.2
    env_file:
      - envs/test/api.env
    environment:
      - LOGSPOUT=ignore
    ports:
      - 3000
    depends_on:
      - database.test

  search.test:
    image: nshou/elasticsearch-kibana:kibana6
    environment:
      - LOGSPOUT=ignore
      - "discovery.type=single-node"
    ports:
      - 5601
      - 9200

  thumbor.test:
    image: dalthon/thumbor-s3-storage
    env_file:
      - envs/test/thumbor.env
    environment:
      - LOGSPOUT=ignore
    ports:
      - 80
    volumes:
      - ./images/thumbor/thumbor.conf:/thumbor/thumbor.conf
    depends_on:
      - s3.test

  mail.test:
    image: schickling/mailcatcher
    environment:
      - LOGSPOUT=ignore
    ports:
      - 1080
      - 1025

  s3.test:
    image: classpert/minio
    build:
      context: images/minio/.
      dockerfile: Dockerfile
    command: minio server --address :80 /data
    env_file:
      - envs/test/minio.env
    environment:
      - LOGSPOUT=ignore
    ports:
      - 80

  user.app.test:
    image: $USER_IMAGE
    command: run serve
    env_file:
      - envs/test/user.env
      - envs/local/developer.env
    environment:
      - LOGSPOUT=ignore
    volumes:
      - ./user-dashboard:/app:cached
      - /app/node_modules
      - ./i18n:/app/src/locales:cached
      - ./components:/app/src/components/external:cached
    ports:
      - 8080
    depends_on:
      - app.test
      - api.test

  developer.app.test:
    image: $DEVELOPER_IMAGE
    command: run serve
    env_file:
      - envs/test/developer.env
      - envs/local/developer.env
    environment:
      - LOGSPOUT=ignore
    volumes:
      - ./developers-dashboard:/app:cached
      - /app/node_modules
      - ./i18n:/app/src/locales:cached
      - ./components:/app/src/components/external:cached
    ports:
      - 8080
    depends_on:
      - app.test
      - api.test
      - que.test
      - logshuttle.test
      - urlbox.test

  database.napoleon.test:
    image: $NAPOLEON_DATABASE_IMAGE
    env_file:
      - envs/test/database-napoleon.env
    environment:
      - LOGSPOUT=ignore
    volumes:
      - ./images/napoleon_database/seed.sql:/docker-entrypoint-initdb.d/z_seed.sql
    ports:
      - 5432

  api.napoleon.test:
    image: postgrest/postgrest:v6.0.2
    env_file:
      - envs/test/api-napoleon.env
    environment:
      - LOGSPOUT=ignore
    ports:
      - 3000
    depends_on:
      - database.napoleon.test

  napoleon.test:
    image: $NAPOLEON_APP_IMAGE
    command: make worker
    env_file:
      - envs/test/napoleon.env
    environment:
      - LOGSPOUT=ignore
    extra_hosts:
      - both.provider.test:172.20.1.118
      - urls.provider.test:172.20.1.118
      - sitemaps.provider.test:172.20.1.118
    volumes:
      - ./napoleon:/app:cached
    depends_on:
      - database.napoleon.test
      - mail.test
      - s3.test

  video.test:
    image: classpert/video-service:minimal
    env_file:
      - envs/test/video.env
      - envs/local/video.env
    environment:
      - LOGSPOUT=ignore
    ports:
      - 80

  provider.test:
    image: classpert/mocked_providers:latest
    build:
      context: images/provider/.
      dockerfile: Dockerfile
    environment:
      - DOMAIN=provider.test
      - LOGSPOUT=ignore
    volumes:
      - ./images/provider/www:/var/www
    ports:
      - 80

  logdrain.test:
    image: classpert/log-drain:1.2.0
    environment:
      - REDIS_URL=redis://redis.test
      - LOGSPOUT=ignore
      - ALLOWED_SOURCES=crawling-event,sitemap-verification-service,domain-validation-service,resource-discovery-service,debug-tool-service
    ports:
      - 8000
    depends_on:
      - redis.test

  logspout.test:
    image: gliderlabs/logspout
    environment:
      - LOGSPOUT=ignore
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80

  logshuttle.test:
    image: classpert/log-shuttle:1.2.0
    environment:
      - LOGSPOUT=ignore
      - LOGSPOUT_URL=http://logspout.test/logs
      - LOGPLEX_URL=http://logplex.test:8001
      - LOGPLEX_INPUT_URL=http://logplex.test:8601/logs
      - LOGDRAIN_URL=http://logdrain.test:8000/drain
    env_file:
      - envs/test/logplex.env
    depends_on:
      - logspout.test
      - logplex.test
      - logdrain.test

  logplex.test:
    image: classpert/logplex:1.0.0
    command: ./_build/default/rel/logplex/bin/logplex foreground
    hostname: logplex
    domainname: docker.local
    environment:
      - LOGSPOUT=ignore
      - INSTANCE_NAME=logplex.docker.local
      - LOCAL_IP=127.0.0.1
      - LOGPLEX_CONFIG_REDIS_URL=redis://redis.test/
      - LOGPLEX_SHARD_URLS=redis://redis.test/#frag1
      - LOGPLEX_REDGRID_REDIS_URL=redis://redis.test/
      - LOGPLEX_STATS_REDIS_URL=redis://redis.test/
    env_file:
      - envs/test/logplex.env
    ports:
      - 8001
      - 8002
      - 8601
      - 6001
    depends_on:
      - redis.test

  redis.test:
    image: redis:2.6
    command: redis-server
    environment:
      - LOGSPOUT=ignore
    ports:
      - 6379

  urlbox.test:
    image: classpert/screenshooter:1.3.0
    environment:
      - LOGSPOUT=ignore
    ports:
      - 3566

volumes:
  base_bundle:
  base_node_modules:
