-- auto-generated, do not change!
-- run `make build-seeds` instead

WITH

courses_template AS (
  INSERT INTO pipeline_templates (
    name,
    dataset_id,
    pipes
  ) SELECT
    'Coursera Courses Pipeline',
    '<%= dataset_id %>',
    '[
      {
        "type":"Fetcher",
        "http":{
          "headers":{
            "user_agent": "<%= user_agent %>"
          }
        },
        "script": {
          "type": "ruby",
          "source_code": <%= course_fetcher %>
        }
      },
      {
        "type":"Fetcher",
        "http":{
          "headers":{
            "user_agent": "<%= user_agent %>"
          }
        },
        "script": {
          "type": "ruby",
          "source_code": <%= price_fetcher %>
        }
      },
      {
        "type":"Fetcher",
        "cache": { "refresh": true },
        "http": {
          "headers":{
            "user_agent": "<%= user_agent %>"
          }
        },
        "script": {
          "type": "ruby",
          "source_code": <%= first_lecture_fetcher %>
        },
        "status_map": [
          [ [ 200, 299 ], "pending" ],
          [   404,        "pending" ]
        ]
      },
      {
        "type":"VideoDownloader",
        "script": {
          "type": "ruby",
          "source_code": <%= video_downloader %>
        }
      },
      {
        "type":"ResourceValidator"
      },
      {
        "type":"ResourceCreator"
      }
    ]'
  RETURNING *
)

INSERT INTO pipeline_templates (
  name,
  data,
  bootstrap_script_type,
  bootstrap_script,
  success_script_type,
  success_script,
  dataset_id,
  pipes
) SELECT
  'Coursera Sitemap Pipeline',
  ('{"next_pipeline_template_id":"' || courses_template.id || '","sitemap_url":"<%= sitemap_url %>"}')::jsonb,
  'sql',
  '
    WITH next_pipeline AS (
      INSERT INTO pipelines (
        label, pipeline_template_id
      ) VALUES (
        $1.label,
        ($1.data->>''next_pipeline_template_id'')::uuid
      )
      RETURNING *
    )

    UPDATE pipelines
    SET data = jsonb_set(pipelines.data, ''{next_pipeline_id}'', (''"'' || next_pipeline.id || ''"'')::jsonb)
    FROM next_pipeline
    WHERE pipelines.id = $1.id;

    INSERT INTO pipe_processes (pipeline_id, initial_accumulator) VALUES ($1.id, (''{"url":"'' || ($1.data->>''sitemap_url'') || ''"}'')::jsonb);
    SELECT pipeline_call($1.id);
  ',
  'sql',
  'SELECT pipeline_call(($1.data->>''next_pipeline_id'')::uuid);',
  '<%= dataset_id %>',
  '[
    {
      "type":"Fetcher",
      "http":{
        "headers":{
          "user_agent": "<%= user_agent %>"
        }
      },
      "script": {
        "type": "ruby",
        "source_code": <%= sitemap_fetcher %>
      }
    },
    {
      "type":"Demux"
    }
  ]'
FROM courses_template;

UPDATE pipeline_templates AS last_template
SET
  schedule_pipeline_template_id = first_template.id,
  schedule_interval             = '1 weeks'
FROM pipeline_templates AS first_template
WHERE
  first_template.name = 'Coursera Sitemap Pipeline' AND
  last_template.name  = 'Coursera Courses Pipeline';
