-- auto-generated, do not change!
-- run `make build-seeds` instead

WITH

course_pipeline_template AS (
  INSERT INTO app.pipeline_templates (
    name,
    dataset_id,
    pipes
  ) VALUES (
    'Udemy Course Pipeline',
    '<%= dataset_id %>',
    '
      [
        {
          "type": "Fetcher",
          "http": {
            "headers":{
              "user_agent":    "Napoleon",
              "authorization": "<%= authorization_header %>"
            }
          },
          "script": {
            "type":        "ruby",
            "source_code": <%= course_fetcher %>
          }
        },
        {
          "type": "ResourceCreator",
          "script": {
            "type":        "ruby",
            "source_code": <%= course_builder %>
          }
        }
      ]
    '
  )
  RETURNING *
)

INSERT INTO app.pipeline_templates (
  name,
  data,
  bootstrap_script_type,
  bootstrap_script,
  success_script_type,
  success_script,
  dataset_id,
  pipes
) SELECT
  'Udemy Course List Pipeline',
  ('{"next_pipeline_template_id":"' || course_pipeline_template.id || '"}')::jsonb,
  'sql',
  '
    WITH next_pipeline AS (
      INSERT INTO app.pipelines (
        pipeline_execution_id,
        pipeline_template_id
      ) VALUES (
        $1.pipeline_execution_id,
        ($1.data->>''next_pipeline_template_id'')::uuid
      )
      RETURNING *
    )

    UPDATE app.pipelines
    SET data = jsonb_set(pipelines.data, ''{next_pipeline_id}'', (''"'' || next_pipeline.id || ''"'')::jsonb)
    FROM next_pipeline
    WHERE pipelines.id = $1.id;

    INSERT INTO app.pipe_processes (pipeline_id, initial_accumulator) VALUES <%= subcategories.map do |subcategory|
      "($1.id, jsonb_build_object(''subcategory'', ''#{subcategory}''))"
    end.join ",\n" %>;

    SELECT app.pipeline_call($1.id);
  ',
  'sql',
  'SELECT app.pipeline_call(($1.data->>''next_pipeline_id'')::uuid);',
  '<%= dataset_id %>',
  '[
    {
      "type": "Fetcher",
      "http": {
        "headers":{
          "user_agent":    "Napoleon",
          "authorization": "<%= authorization_header %>"
        }
      },
      "script": {
        "type":        "ruby",
        "source_code": <%= course_list_fetcher %>
      }
    },
    {
      "type": "Demux",
      "script": {
        "type":        "ruby",
        "source_code": <%= course_list_demux %>
      }
    }
  ]'
FROM course_pipeline_template;
