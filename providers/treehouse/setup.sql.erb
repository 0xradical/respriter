-- auto-generated, do not change!
-- run `make build-seeds` instead

WITH

courses_template AS (
  INSERT INTO app.pipeline_templates (
    name,
    dataset_id,
    pipes
  ) SELECT
    'Treehouse Courses Pipeline',
    '<%= dataset_id %>',
    '[
      {
        "type": "Fetcher",
        "http": {
          "proxy": {
            "uri":      "<%= proxy_host %>",
            "user":     "<%= proxy_user %>",
            "password": "<%= proxy_pass %>"
          },
          "headers": {
            "user_agent": "<%= user_agent %>"
          }
        },
        "status_map": [
          [ [ 200, 299 ], "pending" ],
          [ 404, "skipped" ]
        ],
        "script": {
          "type":        "ruby",
          "source_code": <%= course_fetcher %>
        }
      },
      {
        "type": "Fetcher",
        "http": {
          "proxy": {
            "uri":      "<%= proxy_host %>",
            "user":     "<%= proxy_user %>",
            "password": "<%= proxy_pass %>"
          },
          "headers": {
            "user_agent": "<%= user_agent %>"
          }
        },
        "script": {
          "type":        "ruby",
          "source_code": <%= video_url_fetcher %>
        }
      },
      {
        "type": "VideoDownloader",
        "script": {
          "type":        "ruby",
          "source_code": <%= video_downloader %>
        }
      },
      {
        "type": "ResourceValidator"
      },
      {
        "type": "ResourceCreator"
      }
    ]'
  RETURNING *
),

sitemap_template AS (
  INSERT INTO app.pipeline_templates (
    name,
    data,
    bootstrap_script_type,
    bootstrap_script,
    success_script_type,
    success_script,
    dataset_id,
    pipes
  ) SELECT
    'Treehouse Sitemap Pipeline',
    ('{"next_pipeline_template_id":"' || courses_template.id || '","sitemap_url":"<%= sitemap_url %>"}')::jsonb,
    'sql',
    '
      WITH next_pipeline AS (
        INSERT INTO app.pipelines (
          pipeline_execution_id,
          pipeline_template_id
        ) VALUES (
          $1.pipeline_execution_id,
          ($1.data->>''next_pipeline_template_id'')::uuid
        )
        RETURNING *
      )

      UPDATE app.pipelines
      SET data = jsonb_set(pipelines.data, ''{next_pipeline_id}'', (''"'' || next_pipeline.id || ''"'')::jsonb)
      FROM next_pipeline
      WHERE pipelines.id = $1.id;

      INSERT INTO app.pipe_processes (pipeline_id, initial_accumulator) VALUES ($1.id, (''{"url":"'' || ($1.data->>''sitemap_url'') || ''"}'')::jsonb);
    ',
    'sql',
    '
      UPDATE app.pipelines
      SET data = jsonb_set(data, ''{prices}'', ($1.data->>''prices'')::jsonb)
      WHERE id = ($1.data->>''next_pipeline_id'')::uuid;

      SELECT pipeline_call(($1.data->>''next_pipeline_id'')::uuid);
    ',
    '<%= dataset_id %>',
    '[
      {
        "type": "Fetcher",
        "http": {
          "headers": {
            "user_agent": "<%= user_agent %>"
          }
        },
        "script": {
          "type":        "ruby",
          "source_code": <%= sitemap_fetcher %>
        }
      },
      {
        "type": "Demux"
      }
    ]'
  FROM courses_template
  RETURNING *
)

INSERT INTO app.pipeline_templates (
  name,
  data,
  bootstrap_script_type,
  bootstrap_script,
  success_script_type,
  success_script,
  dataset_id,
  pipes
) SELECT
  'Treehouse Bootstrap Pipeline',
  ('{"next_pipeline_template_id":"' || sitemap_template.id || '","pricing_url":"<%= pricing_url %>"}')::jsonb,
  'sql',
  '
    WITH next_pipeline AS (
      INSERT INTO app.pipelines (
        pipeline_execution_id,
        pipeline_template_id
      ) VALUES (
        $1.pipeline_execution_id,
        ($1.data->>''next_pipeline_template_id'')::uuid
      )
      RETURNING *
    )

    UPDATE app.pipelines
    SET data = jsonb_set(pipelines.data, ''{next_pipeline_id}'', (''"'' || next_pipeline.id || ''"'')::jsonb)
    FROM next_pipeline
    WHERE pipelines.id = $1.id;

    INSERT INTO app.pipe_processes (pipeline_id, initial_accumulator) VALUES ($1.id, (''{"url":"'' || ($1.data->>''pricing_url'') || ''"}'')::jsonb);
    SELECT pipeline_call($1.id);
  ',
  'sql',
  '
    UPDATE app.pipelines
    SET data = jsonb_set(data, ''{prices}'', ($1.data->>''prices'')::jsonb)
    WHERE id = ($1.data->>''next_pipeline_id'')::uuid;

    SELECT pipeline_call(($1.data->>''next_pipeline_id'')::uuid);
  ',
  '<%= dataset_id %>',
  '[
    {
      "type": "Fetcher",
      "http": {
        "headers": {
          "user_agent": "<%= user_agent %>"
        }
      },
      "script": {
        "type":        "ruby",
        "source_code": <%= pricing_fetcher %>
      }
    }
  ]'
FROM sitemap_template;
