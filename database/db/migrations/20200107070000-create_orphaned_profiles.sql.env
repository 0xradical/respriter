BEGIN;

CREATE TABLE app.orphaned_profiles (
  id                          uuid DEFAULT public.uuid_generate_v4() PRIMARY KEY,
  user_account_id             bigint REFERENCES app.user_accounts(id) ON DELETE CASCADE,
  name                        varchar(75) NOT NULL,
  country                     varchar(3),
  short_bio                   varchar(200),
  long_bio                    text,
  email                       varchar(320),
  website                     varchar,
  avatar_url                  varchar,
  public_profiles             jsonb DEFAULT '{}'::jsonb,
  languages                   varchar[] DEFAULT '{}',
  course_ids                  uuid[] DEFAULT '{}',
  state                       varchar(20) DEFAULT 'disabled',
  slug                        varchar,
  claimable_emails            varchar[] DEFAULT '{}',
  claimable_public_profiles   jsonb DEFAULT '{}'::jsonb,
  claim_code                  varchar(7),
  created_at                  timestamptz DEFAULT NOW() NOT NULL,
  updated_at                  timestamptz DEFAULT NOW() NOT NULL
  CONSTRAINT                  state__inclusion CHECK (state IN ('disabled','enabled'))
);

CREATE TRIGGER track_updated_at
  BEFORE UPDATE
  ON app.orphaned_profiles
  FOR EACH ROW
    EXECUTE PROCEDURE triggers.track_updated_at();

CREATE UNIQUE INDEX index_orphaned_profiles_on_user_account_id
ON app.orphaned_profiles
USING btree (user_account_id);

CREATE INDEX index_orphaned_profiles_on_name
ON app.orphaned_profiles
USING btree (name);

GRANT SELECT, REFERENCES                         ON app.orphaned_profiles TO "user";
GRANT SELECT, INSERT, UPDATE, DELETE, REFERENCES ON app.orphaned_profiles TO "admin";

GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA app TO "user";

INSERT INTO public.schema_migrations (version) VALUES ('20200107070000');

COMMIT;
