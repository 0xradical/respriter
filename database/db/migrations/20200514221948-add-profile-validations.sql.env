BEGIN;

CREATE TYPE app.iso3166_1_alpha2_code AS ENUM (
  'AD','AE','AF','AG','AI','AL','AM','AO','AQ','AR','AS','AT','AU','AW','AX','AZ','BA','BB','BD','BE','BF','BG','BH','BI','BJ','BL','BM','BN','BO','BQ','BR','BS','BT','BV','BW','BY','BZ','CA','CC','CD','CF','CG','CH','CI','CK','CL','CM','CN','CO','CR','CU','CV','CW','CX','CY','CZ','DE','DJ','DK','DM','DO','DZ','EC','EE','EG','EH','ER','ES','ET','FI','FJ','FK','FM','FO','FR','GA','GB','GD','GE','GF','GG','GH','GI','GL','GM','GN','GP','GQ','GR','GS','GT','GU','GW','GY','HK','HM','HN','HR','HT','HU','ID','IE','IL','IM','IN','IO','IQ','IR','IS','IT','JE','JM','JO','JP','KE','KG','KH','KI','KM','KN','KP','KR','KW','KY','KZ','LA','LB','LC','LI','LK','LR','LS','LT','LU','LV','LY','MA','MC','MD','ME','MF','MG','MH','MK','ML','MM','MN','MO','MP','MQ','MR','MS','MT','MU','MV','MW','MX','MY','MZ','NA','NC','NE','NF','NG','NI','NL','NO','NP','NR','NU','NZ','OM','PA','PE','PF','PG','PH','PK','PL','PM','PN','PR','PS','PT','PW','PY','QA','RE','RO','RS','RU','RW','SA','SB','SC','SD','SE','SG','SH','SI','SJ','SK','SL','SM','SN','SO','SR','SS','ST','SV','SX','SY','SZ','TC','TD','TF','TG','TH','TJ','TK','TL','TM','TN','TO','TR','TT','TV','TW','TZ','UA','UG','UM','US','UY','UZ','VA','VC','VE','VG','VI','VN','VU','WF','WS','XK','YE','YT','ZA','ZM','ZW'
);

DROP VIEW api.profiles;

ALTER TABLE app.profiles ADD COLUMN social_profiles jsonb DEFAULT '{}'::jsonb;
ALTER TABLE app.profiles ADD COLUMN elearning_profiles jsonb DEFAULT '{}'::jsonb;
ALTER TABLE app.profiles ADD COLUMN country app.iso3166_1_alpha2_code;
ALTER TABLE app.profiles RENAME CONSTRAINT username_format TO username__format;

ALTER DOMAIN app.username RENAME CONSTRAINT username_format TO username__format;
ALTER DOMAIN app.username RENAME CONSTRAINT username_consecutive_dash TO username__consecutive_dash;
ALTER DOMAIN app.username RENAME CONSTRAINT username_consecutive_underline TO username__consecutive_underline;
ALTER DOMAIN app.username RENAME CONSTRAINT username_boundary_dash TO username__boundary_dash;
ALTER DOMAIN app.username RENAME CONSTRAINT username_boundary_underline TO username__boundary_underline;
ALTER DOMAIN app.username RENAME CONSTRAINT username_length_upper TO username__length_upper;
ALTER DOMAIN app.username RENAME CONSTRAINT username_length_lower TO username__length_lower;
ALTER DOMAIN app.username RENAME CONSTRAINT username_lowercased TO username__lowercased;

-- fix use_username
CREATE OR REPLACE FUNCTION triggers.use_username() RETURNS trigger
AS $$
BEGIN
  IF (TG_OP = 'INSERT' AND NEW.username IS NULL) THEN
    RAISE EXCEPTION 'username update failed' USING DETAIL = 'username__cannot_be_null';
  END IF;

  IF (TG_OP = 'UPDATE' AND OLD.username IS NULL AND NEW.username IS NULL) THEN
    RETURN NEW;
  END IF;

  IF TG_OP = 'UPDATE' AND OLD.username IS NOT NULL AND NEW.username IS NULL THEN
    RAISE EXCEPTION 'username update failed' USING DETAIL = 'username__cannot_be_erased';
  END IF;

  IF ((TG_OP = 'INSERT' OR (TG_OP = 'UPDATE' AND OLD.username IS NULL)) AND NEW.username IS NOT NULL) OR
     (TG_OP = 'UPDATE' AND OLD.username IS NOT NULL AND NEW.username IS NOT NULL AND OLD.username <> NEW.username) THEN

    IF TG_OP = 'UPDATE' AND OLD.username_changed_at IS NOT NULL AND
      (NOW() - OLD.username_changed_at < '15 days'::interval) THEN
      RAISE EXCEPTION 'username update failed' USING DETAIL = 'username__change_within_update_threshold', HINT = json_build_object('threshold', '15');
    ELSE
      UPDATE app.profiles SET username_changed_at = NOW() WHERE id = NEW.id;
    END IF;

    INSERT INTO app.used_usernames (profile_id, username) VALUES (NEW.id, NEW.username);

    RETURN NEW;
  END IF;

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- validate profiles trigger
CREATE OR REPLACE FUNCTION triggers.validate_profiles() RETURNS trigger AS $$
DECLARE
  _platform     text;
  _url          text;
  _host         text;
  _url_path     text;
  _id           text;
  _path_pattern text;
BEGIN
  -- social profiles
  IF (
      NEW.social_profiles IS NOT NULL AND
      NEW.social_profiles <> '{}'
    ) THEN

    FOR _platform, _url IN
       SELECT * FROM jsonb_each_text(NEW.social_profiles)
    LOOP
      WITH parsed AS (
        SELECT alias, token FROM ts_debug(_url)
      )
      SELECT (SELECT token FROM parsed WHERE alias = 'host') AS host,
              (SELECT token FROM parsed WHERE alias = 'url_path') AS url_path
        INTO _host, _url_path;

      IF (_host IS NULL) OR (_url_path IS NULL) THEN
        RAISE EXCEPTION 'social_profiles update failed' USING DETAIL = 'public_profile__invalid_uri';
      END IF;

      CASE _platform
      WHEN 'behance' THEN
        -- /thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, 1);
        _id := SUBSTR(_url_path, 2);

        IF (_host <> 'behance.net') OR
           (_path_pattern <> '/') OR
           (_id !~ '^(?!.*(?:\/))(?:[A-z\d\-_]){3,20}$') THEN
          RAISE EXCEPTION 'social_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'dribbble' THEN
        -- /thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, 1);
        _id := SUBSTR(_url_path, 2);

        IF (_host <> 'dribbble.com') OR
           (_path_pattern <> '/') OR
           (_id !~ '^(?!.*(?:\/))(?:[A-z\d\-_]){2,20}$') THEN
          RAISE EXCEPTION 'social_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'facebook' THEN
        -- /thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, 1);
        _id := SUBSTR(_url_path, 2);

        IF  (_host <> 'facebook.com') OR
            (_path_pattern <> '/') OR
            (_id !~ '^(?!.*(?:\/))(?:(?:(?:[A-z\d])(?:[A-z\d]|[.-](?=[A-z\d])){4,50})|(?:\d{15}))$') THEN
          RAISE EXCEPTION 'social_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'github' THEN
        -- /thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, 1);
        _id := SUBSTR(_url_path, 2);

        IF  (_host <> 'github.com') OR
            (_path_pattern <> '/') OR
            (_id !~ '^(?!.*(?:\/))[A-z\d](?:[A-z\d]|-(?=[A-z\d])){0,38}$') THEN
          RAISE EXCEPTION 'social_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'instagram' THEN
        -- /thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, 1);
        _id := SUBSTR(_url_path, 2);

        IF  (_host <> 'instagram.com') OR
            (_path_pattern <> '/') OR
            (_id !~ '^(?!.*(?:\/))([A-z\d._](?:(?:[A-z\d._]|(?:\.(?!\.))){2,28}(?:[A-z\d._]))?)$') THEN
          RAISE EXCEPTION 'social_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'linkedin' THEN
        -- /in/thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, LENGTH('/in/'));
        _id := SUBSTR(_url_path, LENGTH('/in/') + 1);

        IF  (_host <> 'linkedin.com') OR
            (_path_pattern <> '/in/') OR
            (_id !~ '^(?!.*(?:\/))[A-zÀ-ÿ\d](?:[A-zÀ-ÿ\d]|-(?=[A-zÀ-ÿ\d])){2,99}$') THEN
          RAISE EXCEPTION 'social_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'pinterest' THEN
        -- /thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, 1);
        _id := SUBSTR(_url_path, 2);

        IF  (_host <> 'pinterest.com') OR
            (_path_pattern <> '/') OR
            (_id !~ '^(?!.*(?:\/))[A-z\d](?:[A-z\d]|_){2,29}$') THEN
          RAISE EXCEPTION 'social_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'reddit' THEN
        -- /user/thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, LENGTH('/user/'));
        _id := SUBSTR(_url_path, LENGTH('/user/') + 1);

        IF  (_host <> 'reddit.com') OR
            (_path_pattern <> '/user/') OR
            (_id !~ '^(?!.*(?:\/))(?:[A-z\d\-_]){3,20}$') THEN
          RAISE EXCEPTION 'social_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'soundcloud' THEN
        -- /thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, 1);
        _id := SUBSTR(_url_path, 2);

        IF  (_host <> 'soundcloud.com') OR
            (_path_pattern <> '/') OR
            (_id !~ '^(?!.*(?:\/))(?:[a-z\d](?:[a-z\d]|[-_](?=[a-z\d])){2,24})$') THEN
          RAISE EXCEPTION 'social_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'twitter' THEN
        -- /thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, 1);
        _id := SUBSTR(_url_path, 2);

        IF  (_host <> 'twitter.com') OR
            (_path_pattern <> '/') OR
            (_id !~ '^(?!.*(?:\/))[A-z\d_]{4,15}$') THEN
          RAISE EXCEPTION 'social_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'youtube' THEN
        -- /channel/UCasdjfsafkjasdkflj
        _path_pattern := SUBSTR(_url_path, 1, LENGTH('/channel/'));
        _id := SUBSTR(_url_path, LENGTH('/channel/') + 1);

        IF  (_host <> 'youtube.com') OR
            (_path_pattern <> '/channel/') OR
            (_id !~ '^(?!.*(?:\/))UC(?:[A-z\d_-]){22}$') THEN
          RAISE EXCEPTION 'social_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      ELSE
        NULL;
      END CASE;
    END LOOP;
  END IF;

  -- elearning profiles
  IF (
      NEW.elearning_profiles IS NOT NULL AND
      NEW.elearning_profiles <> '{}'
    ) THEN

    FOR _platform, _url IN
       SELECT * FROM jsonb_each_text(NEW.elearning_profiles)
    LOOP
      WITH parsed AS (
        SELECT alias, token FROM ts_debug(_url)
      )
      SELECT (SELECT token FROM parsed WHERE alias = 'host') AS host,
              (SELECT token FROM parsed WHERE alias = 'url_path') AS url_path
        INTO _host, _url_path;

      IF (_host IS NULL) OR (_url_path IS NULL) THEN
        RAISE EXCEPTION 'elearning_profiles update failed' USING DETAIL = 'public_profile__invalid_uri';
      END IF;

      CASE _platform
      WHEN 'linkedin_learning' THEN
        -- /learning/instructors/thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, LENGTH('/learning/instructors/'));
        _id := SUBSTR(_url_path, LENGTH('/learning/instructors/') + 1);

        IF  (_host <> 'linkedin.com') OR
            (_path_pattern <> '/learning/instructors/') OR
            (_id !~ '^(?!.*(?:\/))[a-z\d](?:[a-z\d]|-(?=[a-z\d])){2,}$') THEN
          RAISE EXCEPTION 'elearning_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'masterclass' THEN
        -- /classes/thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, LENGTH('/classes/'));
        _id := SUBSTR(_url_path, LENGTH('/classes/') + 1);

        IF  (_host <> 'masterclass.com') OR
            (_path_pattern <> '/classes/') OR
            (_id !~ '^(?!.*(?:\/))(?:[a-z\d](?:[a-z\d]|-(?=[a-z\d])){9,})$') THEN
          RAISE EXCEPTION 'elearning_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'pluralsight' THEN
        -- /authors/thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, LENGTH('/authors/'));
        _id := SUBSTR(_url_path, LENGTH('/authors/') + 1);

        IF  (_host <> 'pluralsight.com') OR
            (_path_pattern <> '/authors/') OR
            (_id !~ '^(?!.*(?:\/))[a-z\d](?:[a-z\d]|-(?=[a-z\d])){4,}$') THEN
          RAISE EXCEPTION 'elearning_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'skillshare' THEN
        -- /user/thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, LENGTH('/user/'));
        _id := SUBSTR(_url_path, LENGTH('/user/') + 1);

        IF  (_host <> 'skillshare.com') OR
            (_path_pattern <> '/user/') OR
            (_id !~ '^(?!.*(?:\/))(?:[a-z\d\-_]{3,30})$') THEN
          RAISE EXCEPTION 'elearning_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'treehouse' THEN
        -- /thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, 1);
        _id := SUBSTR(_url_path, 2);

        IF  (_host <> 'teamtreehouse.com') OR
            (_path_pattern <> '/') OR
            (_id !~ '^(?!.*(?:\/))(?:[a-z]{3,30})$') THEN
          RAISE EXCEPTION 'elearning_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      WHEN 'udemy' THEN
        -- /user/thiagobrandam
        _path_pattern := SUBSTR(_url_path, 1, LENGTH('/user/'));
        _id := SUBSTR(_url_path, LENGTH('/user/') + 1);

        IF  (_host <> 'udemy.com') OR
            (_path_pattern <> '/user/') OR
            (_id !~ '^(?!.*(?:\/))[a-z\d\-_]{3,60}$') THEN
          RAISE EXCEPTION 'elearning_profiles update failed' USING DETAIL = 'public_profile__invalid_format', HINT = json_build_object('platform', _platform);
        END IF;
      ELSE
        NULL;
      END CASE;
    END LOOP;
  END IF;

  RETURN NEW;
END;
$$ SECURITY DEFINER STABLE LANGUAGE plpgsql;

CREATE TRIGGER validate_profiles
BEFORE INSERT OR UPDATE
ON app.profiles
FOR EACH ROW
   EXECUTE PROCEDURE triggers.validate_profiles();

CREATE OR REPLACE VIEW api.profiles AS
  SELECT
    id,
    name,
    username,
    short_bio,
    long_bio,
    instructor,
    public,
    country,
    COALESCE(uploaded_avatar_url, oauth_avatar_url) AS avatar_url,
    COALESCE( if_admin(date_of_birth),   if_user_by_id(user_account_id, date_of_birth)   ) AS date_of_birth,
    user_account_id,
    COALESCE( if_admin(interests),       if_user_by_id(user_account_id, interests)       ) AS interests,
    COALESCE( if_admin(preferences),     if_user_by_id(user_account_id, preferences)     ) AS preferences,
    COALESCE( if_admin(social_profiles), if_user_by_id(user_account_id, social_profiles) ) AS social_profiles,
    COALESCE( if_admin(elearning_profiles), if_user_by_id(user_account_id, elearning_profiles) ) AS elearning_profiles
  FROM app.profiles;

CREATE OR REPLACE FUNCTION triggers.api_profiles_view_instead() RETURNS trigger AS $$
DECLARE
  exception_sql_state text;
  exception_column_name text;
  exception_constraint_name text;
  exception_table_name text;
  exception_message text;
  exception_detail text;
  exception_hint text;
BEGIN
  IF NEW.user_account_id != OLD.user_account_id THEN
    RAISE invalid_authorization_specification USING message = 'could not change user_account_id';
  END IF;

  IF if_admin(TRUE) IS NULL AND if_user_by_id(NEW.user_account_id, TRUE) IS NULL THEN
    RAISE insufficient_privilege;
  END IF;

  UPDATE app.profiles
  SET
    name                = NEW.name,
    date_of_birth       = NEW.date_of_birth,
    interests           = NEW.interests,
    preferences         = NEW.preferences,
    username            = NEW.username,
    short_bio           = NEW.short_bio,
    long_bio            = NEW.long_bio,
    instructor          = NEW.instructor,
    public              = NEW.public,
    country             = NEW.country,
    social_profiles     = NEW.social_profiles,
    elearning_profiles  = NEW.elearning_profiles
  WHERE
    id = OLD.id;

  RETURN NEW;
EXCEPTION
  WHEN insufficient_privilege THEN
    RAISE;
  WHEN OTHERS THEN
  GET STACKED DIAGNOSTICS exception_message = MESSAGE_TEXT,
                          exception_detail = PG_EXCEPTION_DETAIL,
                          exception_hint = PG_EXCEPTION_HINT,
                          exception_sql_state = RETURNED_SQLSTATE,
                          exception_column_name = COLUMN_NAME,
                          exception_constraint_name = CONSTRAINT_NAME,
                          exception_table_name = TABLE_NAME;

  IF exception_detail = 'error' THEN
    RAISE EXCEPTION '%', exception_message
      USING DETAIL = exception_detail, HINT = exception_hint;
  ELSE
    -- constraint
    IF exception_sql_state IN ('23514', '23505') AND exception_constraint_name IS NOT NULL THEN
      exception_column_name := REGEXP_REPLACE(exception_constraint_name, '(.*)__(.*)', '\1');
      exception_sql_state := 'constraint';

      exception_detail := (
        CASE exception_column_name
          WHEN 'used_usernames_username_idx' THEN '010001'
          WHEN 'used_usernames_profile_id_username_idx'  THEN '010002'
          ELSE '010000'
        END
      );

    END IF;

    RAISE EXCEPTION '%', exception_message
      USING DETAIL = COALESCE(exception_detail, 'error'), HINT = exception_hint;

  END IF;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER api_profiles_view_instead
  INSTEAD OF UPDATE
  ON api.profiles
  FOR EACH ROW
    EXECUTE PROCEDURE triggers.api_profiles_view_instead();

GRANT SELECT, UPDATE ON api.profiles TO "admin";
GRANT SELECT, UPDATE ON api.profiles TO "user";

INSERT INTO public.schema_migrations (version) VALUES ('20200514221948');

COMMIT;
