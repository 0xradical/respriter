BEGIN;

CREATE OR REPLACE FUNCTION triggers.api_preview_courses_view_instead_of_insert() RETURNS trigger AS $$
DECLARE
  preview_course RECORD;
BEGIN
  preview_course := NEW;

  preview_course.id := COALESCE(preview_course.id, public.uuid_generate_v4());
  preview_course.status := 'pending';
  preview_course.data := COALESCE(preview_course.data, '{}'::jsonb);

  INSERT INTO app.preview_courses (id, status, provider_crawler_id, data)
  VALUES (preview_course.id, preview_course.status, preview_course.provider_crawler_id, preview_course.data);

  INSERT INTO public.que_jobs
    (queue, priority, run_at, job_class, args, data)
    VALUES
    (
      'default',
      100,
      NOW(),
      'Developers::PreviewCourseProcessorJob',
      ('["' || preview_course.id || '"]')::jsonb,
      '{}'::jsonb
    );

  RETURN preview_course;

  RAISE insufficient_privilege;
END;
$$ SECURITY DEFINER LANGUAGE plpgsql;

CREATE TRIGGER api_preview_courses_view_instead_of_insert
  INSTEAD OF INSERT OR UPDATE
  ON api.preview_courses
  FOR EACH ROW
    EXECUTE PROCEDURE triggers.api_preview_courses_view_instead_of_insert();

GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA app TO "user";

INSERT INTO public.schema_migrations (version) VALUES ('20191209180900');

COMMIT;
