BEGIN;

DROP VIEW api.crawling_events;
DROP TABLE app.crawling_events;

CREATE TABLE app.crawling_events (
  id                  uuid        DEFAULT    public.uuid_generate_v1() PRIMARY KEY,
  provider_crawler_id uuid        REFERENCES app.provider_crawlers(id) ON DELETE CASCADE,
  execution_id        uuid                                             NOT NULL,
  created_at          timestamptz DEFAULT    NOW()                     NOT NULL,
  updated_at          timestamptz DEFAULT    NOW()                     NOT NULL,
  sequence            bigint,
  type                varchar                                          NOT NULL,
  data                jsonb
);

CREATE OR REPLACE VIEW api.crawling_events AS
  SELECT *
  FROM app.crawling_events AS event
  WHERE
    (
      current_user = 'user'
      AND EXISTS (
        SELECT 1
        FROM app.provider_crawlers AS crawler
        WHERE
          crawler.status != 'deleted'
          AND event.provider_crawler_id = crawler.id
          AND if_user_by_ids(crawler.user_account_ids, TRUE)
      )
    ) OR current_user = 'admin';

CREATE TRIGGER track_updated_at
  BEFORE UPDATE
  ON app.crawling_events
  FOR EACH ROW
    EXECUTE PROCEDURE triggers.track_updated_at();

INSERT INTO public.schema_migrations (version) VALUES ('20200218175146');

COMMIT;
