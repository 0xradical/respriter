BEGIN;

CREATE FUNCTION triggers.pipe_process_delete_que_jobs()
RETURNS trigger AS $$
BEGIN
  DELETE FROM public.que_jobs
  WHERE
    job_class IN ('PipeProcess::CallJob', 'PipeProcess::RetryJob')
    AND args->>0 = OLD.id::varchar;

  RETURN OLD;
END;
$$ SECURITY DEFINER LANGUAGE plpgsql;

CREATE FUNCTION triggers.pipeline_delete_que_jobs()
RETURNS trigger AS $$
BEGIN
  DELETE FROM public.que_jobs
  WHERE
    job_class IN ('Pipeline::BootstrapJob', 'Pipeline::WaitingJob', 'Pipeline::SuccessJob', 'Pipeline::FailJob', 'Pipeline::NotifyJob')
    AND args->>0 = OLD.id::varchar;

  RETURN OLD;
END;
$$ SECURITY DEFINER LANGUAGE plpgsql;

CREATE FUNCTION triggers.pipeline_execution_delete_que_jobs()
RETURNS trigger AS $$
BEGIN
  DELETE FROM public.que_jobs
  WHERE
    job_class IN ('PipelineExecution::CallJob')
    AND args->>0 = OLD.id::varchar;

  RETURN OLD;
END;
$$ SECURITY DEFINER LANGUAGE plpgsql;

CREATE TRIGGER pipe_process_delete_que_jobs
  AFTER DELETE
  ON app.pipe_processes
  FOR EACH ROW
    EXECUTE PROCEDURE triggers.pipe_process_delete_que_jobs();

CREATE TRIGGER pipeline_delete_que_jobs
  AFTER DELETE
  ON app.pipelines
  FOR EACH ROW
    EXECUTE PROCEDURE triggers.pipeline_delete_que_jobs();

CREATE TRIGGER pipeline_execution_delete_que_jobs
  AFTER DELETE
  ON app.pipeline_executions
  FOR EACH ROW
    EXECUTE PROCEDURE triggers.pipeline_execution_delete_que_jobs();

INSERT INTO public.schema_migrations (version) VALUES ('20200212123905');

COMMIT;
