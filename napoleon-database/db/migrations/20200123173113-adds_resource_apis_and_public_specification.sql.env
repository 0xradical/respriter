BEGIN;

ALTER TABLE app.resource_schemas ADD COLUMN public_specification jsonb;

CREATE INDEX index_pipe_processes_on_status
ON app.pipe_processes
USING btree (status);

CREATE INDEX index_pipe_processes_on_pipeline_id_and_status
ON app.pipe_processes
USING btree (pipeline_id, status);

CREATE INDEX index_pipelines_on_status
ON app.pipelines
USING btree (status);

CREATE INDEX index_pipelines_on_pipeline_execution_id_and_status
ON app.pipelines
USING btree (pipeline_execution_id, status);

CREATE OR REPLACE VIEW api.resource_schemas AS
  SELECT
    id,
    dataset_id,
    created_at,
    updated_at,
    kind,
    schema_version,
    specification,
    public_specification
  FROM app.resource_schemas
  WHERE
    if_dataset_id(dataset_id, TRUE);

CREATE OR REPLACE FUNCTION triggers.api_resource_schemas_instead_insert() RETURNS trigger AS $$
DECLARE
  entry RECORD;
BEGIN
  INSERT INTO app.resource_schemas (
    kind,
    schema_version,
    specification,
    public_specification,
    dataset_id
  ) VALUES (
    NEW.kind,
    NEW.schema_version,
    NEW.specification,
    NEW.public_specification,
    current_setting('request.jwt.claim.dataset', true)::uuid
  ) RETURNING
    id,
    dataset_id,
    created_at,
    updated_at,
    kind,
    schema_version,
    specification,
    public_specification
  INTO entry;

  RETURN entry;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE VIEW api.resource_versions AS
  SELECT
    id,
    resource_id,
    dataset_sequence,
    dataset_id,
    sequence,
    status,
    created_at,
    updated_at,
    unique_id,
    kind,
    schema_version,
    content,
    relations
  FROM app.resource_versions
  WHERE
    if_dataset_id(dataset_id, TRUE);

CREATE OR REPLACE VIEW api.resources AS
  SELECT
    id,
    dataset_id,
    sequence,
    status,
    created_at,
    updated_at,
    unique_id,
    kind,
    schema_version,
    content,
    relations
  FROM app.resources
  WHERE
    if_dataset_id(dataset_id, TRUE);

GRANT SELECT ON TABLE app.resources TO "user";
GRANT SELECT ON TABLE api.resources TO "user";

GRANT SELECT ON TABLE app.resource_versions TO "user";
GRANT SELECT ON TABLE api.resource_versions TO "user";

INSERT INTO public.schema_migrations (version) VALUES ('20200123173113');

COMMIT;
