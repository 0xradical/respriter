#!/usr/bin/env bash

database_db=`./bin/parse_uri $POSTGRES_URL path`
database_host=`./bin/parse_uri $POSTGRES_URL host`
database_password=`./bin/parse_uri $POSTGRES_URL password`
database_port=`./bin/parse_uri $POSTGRES_URL port`
database_user=`./bin/parse_uri $POSTGRES_URL user`

query_paramsless_url=$(echo $POSTGRES_URL | cut -d\? -f1)

timestamps=`ls $1/ | sort | grep -o -E '^[^-]+' | sed "s/\(.*\)/'\1'/g" | sed '$!s/$/,/'`
missing_timestamps=`echo "SELECT migration_version FROM unnest(ARRAY[$timestamps]) AS migration_version WHERE NOT EXISTS (SELECT version FROM schema_migrations WHERE version = migration_version);" | psql $query_paramsless_url | grep -o -E '^ [[:digit:]]+' | grep -o -E '[[:digit:]]+' | sort`

for timestamp in $missing_timestamps; do
  file=`ls $1/$timestamp* | head -n 1`
  cat $file | envsubst | psql $query_paramsless_url > /dev/null
  migration_succeded=`echo "SELECT version FROM schema_migrations WHERE version='$timestamp';" | psql $query_paramsless_url | grep "$timestamp"`;
  if [ -z "$migration_succeded" ]; then
    echo -e "\e[31mFailed $file\e[0m";
    exit -1
  else
    echo -e "\e[32mMigrated $file\e[0m";
  fi
done
