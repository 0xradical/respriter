#!/usr/bin/env bash

source $1

count=1
until pg_isready -U $DATABASE_USER -h $DATABASE_HOST > /dev/null; do
  sleep 0.5;
  if [ $count -gt 20 ]; then
    echo -e "Database looks down.\nRun outside docker container:\n  make up-database "
    exit -1
  else
    count=$((count+1))
  fi;
done;

PGPASSWORD=$DATABASE_PASSWORD pg_restore --verbose --clean --no-acl --no-owner -h $DATABASE_HOST -U $DATABASE_USER -d $DATABASE_DB < $2

# Drop Roles
PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USER -h $DATABASE_HOST -p $DATABASE_PORT -d $DATABASE_DB -c 'DROP ROLE IF EXISTS "anonymous"'
PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USER -h $DATABASE_HOST -p $DATABASE_PORT -d $DATABASE_DB -c 'DROP ROLE IF EXISTS "user"'
PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USER -h $DATABASE_HOST -p $DATABASE_PORT -d $DATABASE_DB -c 'DROP ROLE IF EXISTS "admin"'
PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USER -h $DATABASE_HOST -p $DATABASE_PORT -d $DATABASE_DB -c 'DROP ROLE IF EXISTS "authenticator"'

# Recreate them
PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USER -h $DATABASE_HOST -p $DATABASE_PORT -d $DATABASE_DB -f /app/database/src/auth/anonymous.sql
PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USER -h $DATABASE_HOST -p $DATABASE_PORT -d $DATABASE_DB -f /app/database/src/auth/user.sql
PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USER -h $DATABASE_HOST -p $DATABASE_PORT -d $DATABASE_DB -f /app/database/src/auth/admin.sql
PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USER -h $DATABASE_HOST -p $DATABASE_PORT -d $DATABASE_DB -f /app/database/src/auth/authenticator.sql

# A little hack to fix authenticator password
PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USER -h $DATABASE_HOST -p $DATABASE_PORT -d $DATABASE_DB -c "ALTER ROLE \"authenticator\" WITH PASSWORD '$AUTHENTICATOR_PASSWORD'; UPDATE settings.secrets SET value = '$JWT_SECRET' WHERE key = 'app.jwt_secret';"

exit 0
