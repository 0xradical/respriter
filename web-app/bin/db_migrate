#!/usr/bin/env bash

source $1

timestamps=`ls $2/ | sort | grep -o -E '^[^-]+' | sed "s/\(.*\)/'\1'/g" | sed '$!s/$/,/'`
missing_timestamps=`echo "SELECT migration_version FROM unnest(ARRAY[$timestamps]) AS migration_version WHERE NOT EXISTS (SELECT version FROM schema_migrations WHERE version = migration_version);" | PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USER -h $DATABASE_HOST -p $DATABASE_PORT -d $DATABASE_DB | grep -o -E '^ [[:digit:]]+' | grep -o -E '[[:digit:]]+' | sort`

for timestamp in $missing_timestamps; do
  file=`ls $2/$timestamp* | head -n 1`
  cat $file | envsubst | PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USER -h $DATABASE_HOST -p $DATABASE_PORT -d $DATABASE_DB > /dev/null
  migration_succeded=`echo "SELECT version FROM schema_migrations WHERE version='$timestamp';" | PGPASSWORD=$DATABASE_PASSWORD psql -U $DATABASE_USER -h $DATABASE_HOST -p $DATABASE_PORT -d $DATABASE_DB | grep "$timestamp"`;
  if [ -z "$migration_succeded" ]; then
    echo -e "\e[31mFailed $file\e[0m";
    exit -1
  else
    echo -e "\e[32mMigrated $file\e[0m";
  fi
done
